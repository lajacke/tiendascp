<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Usuario', 'doctrine');

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property decimal $ci
 * @property string $nombre
 * @property string $apellido
 * @property string $ulogin
 * @property string $upassword
 * @property timestamp $acceso
 * @property decimal $estatus
 * @property timestamp $pass_exp
 * @property string $semilla
 * @property integer $id
 * @property integer $empresas_id
 * @property string $nombre_empresa
 * @property string $correo
 * @property string $telefono
 * @property Doctrine_Collection $TiendaCarrito
 * 
 * @method decimal             getCi()             Returns the current record's "ci" value
 * @method string              getNombre()         Returns the current record's "nombre" value
 * @method string              getApellido()       Returns the current record's "apellido" value
 * @method string              getUlogin()         Returns the current record's "ulogin" value
 * @method string              getUpassword()      Returns the current record's "upassword" value
 * @method timestamp           getAcceso()         Returns the current record's "acceso" value
 * @method decimal             getEstatus()        Returns the current record's "estatus" value
 * @method timestamp           getPassExp()        Returns the current record's "pass_exp" value
 * @method string              getSemilla()        Returns the current record's "semilla" value
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getEmpresasId()     Returns the current record's "empresas_id" value
 * @method string              getNombreEmpresa()  Returns the current record's "nombre_empresa" value
 * @method string              getCorreo()         Returns the current record's "correo" value
 * @method string              getTelefono()       Returns the current record's "telefono" value
 * @method Doctrine_Collection getTiendaCarrito()  Returns the current record's "TiendaCarrito" collection
 * @method Usuario             setCi()             Sets the current record's "ci" value
 * @method Usuario             setNombre()         Sets the current record's "nombre" value
 * @method Usuario             setApellido()       Sets the current record's "apellido" value
 * @method Usuario             setUlogin()         Sets the current record's "ulogin" value
 * @method Usuario             setUpassword()      Sets the current record's "upassword" value
 * @method Usuario             setAcceso()         Sets the current record's "acceso" value
 * @method Usuario             setEstatus()        Sets the current record's "estatus" value
 * @method Usuario             setPassExp()        Sets the current record's "pass_exp" value
 * @method Usuario             setSemilla()        Sets the current record's "semilla" value
 * @method Usuario             setId()             Sets the current record's "id" value
 * @method Usuario             setEmpresasId()     Sets the current record's "empresas_id" value
 * @method Usuario             setNombreEmpresa()  Sets the current record's "nombre_empresa" value
 * @method Usuario             setCorreo()         Sets the current record's "correo" value
 * @method Usuario             setTelefono()       Sets the current record's "telefono" value
 * @method Usuario             setTiendaCarrito()  Sets the current record's "TiendaCarrito" collection
 * 
 * @package    tienda_scp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('ci', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('nombre', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('apellido', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('ulogin', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('upassword', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('acceso', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('estatus', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('pass_exp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('semilla', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'usuario_id',
             'length' => 4,
             ));
        $this->hasColumn('empresas_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre_empresa', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('correo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('telefono', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TiendaCarrito', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));
    }
}