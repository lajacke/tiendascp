<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VentasMaestro', 'doctrine');

/**
 * BaseVentasMaestro
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $clientes_id
 * @property timestamp $fecha_entrega
 * @property integer $productos_id
 * @property integer $empresas_id
 * @property integer $productos_cantidad
 * @property float $total_venta
 * @property Productos $Productos
 * @property Clientes $Clientes
 * @property Empresas $Empresas
 * @property Doctrine_Collection $Devoluciones
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getClientesId()         Returns the current record's "clientes_id" value
 * @method timestamp           getFechaEntrega()       Returns the current record's "fecha_entrega" value
 * @method integer             getProductosId()        Returns the current record's "productos_id" value
 * @method integer             getEmpresasId()         Returns the current record's "empresas_id" value
 * @method integer             getProductosCantidad()  Returns the current record's "productos_cantidad" value
 * @method float               getTotalVenta()         Returns the current record's "total_venta" value
 * @method Productos           getProductos()          Returns the current record's "Productos" value
 * @method Clientes            getClientes()           Returns the current record's "Clientes" value
 * @method Empresas            getEmpresas()           Returns the current record's "Empresas" value
 * @method Doctrine_Collection getDevoluciones()       Returns the current record's "Devoluciones" collection
 * @method VentasMaestro       setId()                 Sets the current record's "id" value
 * @method VentasMaestro       setClientesId()         Sets the current record's "clientes_id" value
 * @method VentasMaestro       setFechaEntrega()       Sets the current record's "fecha_entrega" value
 * @method VentasMaestro       setProductosId()        Sets the current record's "productos_id" value
 * @method VentasMaestro       setEmpresasId()         Sets the current record's "empresas_id" value
 * @method VentasMaestro       setProductosCantidad()  Sets the current record's "productos_cantidad" value
 * @method VentasMaestro       setTotalVenta()         Sets the current record's "total_venta" value
 * @method VentasMaestro       setProductos()          Sets the current record's "Productos" value
 * @method VentasMaestro       setClientes()           Sets the current record's "Clientes" value
 * @method VentasMaestro       setEmpresas()           Sets the current record's "Empresas" value
 * @method VentasMaestro       setDevoluciones()       Sets the current record's "Devoluciones" collection
 * 
 * @package    tienda_scp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVentasMaestro extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ventas_maestro');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'ventas_maestro_id',
             'length' => 4,
             ));
        $this->hasColumn('clientes_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha_entrega', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('productos_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('empresas_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('productos_cantidad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('total_venta', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Productos', array(
             'local' => 'productos_id',
             'foreign' => 'id'));

        $this->hasOne('Clientes', array(
             'local' => 'clientes_id',
             'foreign' => 'id'));

        $this->hasOne('Empresas', array(
             'local' => 'empresas_id',
             'foreign' => 'id'));

        $this->hasMany('Devoluciones', array(
             'local' => 'id',
             'foreign' => 'ventas_maestro_id'));
    }
}